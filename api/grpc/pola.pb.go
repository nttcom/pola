// Copyright (c) 2022 NTT Communications Corporation
//
// This software is released under the MIT License.
// see https://github.com/nttcom/pola/blob/main/LICENSE

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pola.proto

package grpc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/empty"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MetricType int32

const (
	MetricType_IGP      MetricType = 0
	MetricType_TE       MetricType = 1
	MetricType_DELAY    MetricType = 2
	MetricType_HOPCOUNT MetricType = 3
)

var MetricType_name = map[int32]string{
	0: "IGP",
	1: "TE",
	2: "DELAY",
	3: "HOPCOUNT",
}

var MetricType_value = map[string]int32{
	"IGP":      0,
	"TE":       1,
	"DELAY":    2,
	"HOPCOUNT": 3,
}

func (x MetricType) String() string {
	return proto.EnumName(MetricType_name, int32(x))
}

func (MetricType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cd7089df9be4a106, []int{0}
}

type Label struct {
	Sid                  uint32   `protobuf:"varint,1,opt,name=sid,proto3" json:"sid,omitempty"`
	LoAddr               []byte   `protobuf:"bytes,2,opt,name=loAddr,proto3" json:"loAddr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Label) Reset()         { *m = Label{} }
func (m *Label) String() string { return proto.CompactTextString(m) }
func (*Label) ProtoMessage()    {}
func (*Label) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd7089df9be4a106, []int{0}
}

func (m *Label) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Label.Unmarshal(m, b)
}
func (m *Label) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Label.Marshal(b, m, deterministic)
}
func (m *Label) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Label.Merge(m, src)
}
func (m *Label) XXX_Size() int {
	return xxx_messageInfo_Label.Size(m)
}
func (m *Label) XXX_DiscardUnknown() {
	xxx_messageInfo_Label.DiscardUnknown(m)
}

var xxx_messageInfo_Label proto.InternalMessageInfo

func (m *Label) GetSid() uint32 {
	if m != nil {
		return m.Sid
	}
	return 0
}

func (m *Label) GetLoAddr() []byte {
	if m != nil {
		return m.LoAddr
	}
	return nil
}

type LspData struct {
	PcepSessionAddr      []byte   `protobuf:"bytes,1,opt,name=pcepSessionAddr,proto3" json:"pcepSessionAddr,omitempty"`
	SrcAddr              []byte   `protobuf:"bytes,2,opt,name=srcAddr,proto3" json:"srcAddr,omitempty"`
	DstAddr              []byte   `protobuf:"bytes,3,opt,name=dstAddr,proto3" json:"dstAddr,omitempty"`
	Labels               []*Label `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty"`
	Color                uint32   `protobuf:"varint,5,opt,name=color,proto3" json:"color,omitempty"`
	PolicyName           string   `protobuf:"bytes,6,opt,name=policyName,proto3" json:"policyName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LspData) Reset()         { *m = LspData{} }
func (m *LspData) String() string { return proto.CompactTextString(m) }
func (*LspData) ProtoMessage()    {}
func (*LspData) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd7089df9be4a106, []int{1}
}

func (m *LspData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LspData.Unmarshal(m, b)
}
func (m *LspData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LspData.Marshal(b, m, deterministic)
}
func (m *LspData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LspData.Merge(m, src)
}
func (m *LspData) XXX_Size() int {
	return xxx_messageInfo_LspData.Size(m)
}
func (m *LspData) XXX_DiscardUnknown() {
	xxx_messageInfo_LspData.DiscardUnknown(m)
}

var xxx_messageInfo_LspData proto.InternalMessageInfo

func (m *LspData) GetPcepSessionAddr() []byte {
	if m != nil {
		return m.PcepSessionAddr
	}
	return nil
}

func (m *LspData) GetSrcAddr() []byte {
	if m != nil {
		return m.SrcAddr
	}
	return nil
}

func (m *LspData) GetDstAddr() []byte {
	if m != nil {
		return m.DstAddr
	}
	return nil
}

func (m *LspData) GetLabels() []*Label {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *LspData) GetColor() uint32 {
	if m != nil {
		return m.Color
	}
	return 0
}

func (m *LspData) GetPolicyName() string {
	if m != nil {
		return m.PolicyName
	}
	return ""
}

type LspStatus struct {
	IsSuccess            bool     `protobuf:"varint,1,opt,name=isSuccess,proto3" json:"isSuccess,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LspStatus) Reset()         { *m = LspStatus{} }
func (m *LspStatus) String() string { return proto.CompactTextString(m) }
func (*LspStatus) ProtoMessage()    {}
func (*LspStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd7089df9be4a106, []int{2}
}

func (m *LspStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LspStatus.Unmarshal(m, b)
}
func (m *LspStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LspStatus.Marshal(b, m, deterministic)
}
func (m *LspStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LspStatus.Merge(m, src)
}
func (m *LspStatus) XXX_Size() int {
	return xxx_messageInfo_LspStatus.Size(m)
}
func (m *LspStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_LspStatus.DiscardUnknown(m)
}

var xxx_messageInfo_LspStatus proto.InternalMessageInfo

func (m *LspStatus) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

type PeerAddrList struct {
	PeerAddrs            [][]byte `protobuf:"bytes,1,rep,name=PeerAddrs,proto3" json:"PeerAddrs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeerAddrList) Reset()         { *m = PeerAddrList{} }
func (m *PeerAddrList) String() string { return proto.CompactTextString(m) }
func (*PeerAddrList) ProtoMessage()    {}
func (*PeerAddrList) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd7089df9be4a106, []int{3}
}

func (m *PeerAddrList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerAddrList.Unmarshal(m, b)
}
func (m *PeerAddrList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerAddrList.Marshal(b, m, deterministic)
}
func (m *PeerAddrList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerAddrList.Merge(m, src)
}
func (m *PeerAddrList) XXX_Size() int {
	return xxx_messageInfo_PeerAddrList.Size(m)
}
func (m *PeerAddrList) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerAddrList.DiscardUnknown(m)
}

var xxx_messageInfo_PeerAddrList proto.InternalMessageInfo

func (m *PeerAddrList) GetPeerAddrs() [][]byte {
	if m != nil {
		return m.PeerAddrs
	}
	return nil
}

type LspList struct {
	Lsps                 []*LspData `protobuf:"bytes,1,rep,name=Lsps,proto3" json:"Lsps,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *LspList) Reset()         { *m = LspList{} }
func (m *LspList) String() string { return proto.CompactTextString(m) }
func (*LspList) ProtoMessage()    {}
func (*LspList) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd7089df9be4a106, []int{4}
}

func (m *LspList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LspList.Unmarshal(m, b)
}
func (m *LspList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LspList.Marshal(b, m, deterministic)
}
func (m *LspList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LspList.Merge(m, src)
}
func (m *LspList) XXX_Size() int {
	return xxx_messageInfo_LspList.Size(m)
}
func (m *LspList) XXX_DiscardUnknown() {
	xxx_messageInfo_LspList.DiscardUnknown(m)
}

var xxx_messageInfo_LspList proto.InternalMessageInfo

func (m *LspList) GetLsps() []*LspData {
	if m != nil {
		return m.Lsps
	}
	return nil
}

type LsPrefix struct {
	Prefix               string   `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	SidIndex             uint32   `protobuf:"varint,2,opt,name=sid_index,json=sidIndex,proto3" json:"sid_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LsPrefix) Reset()         { *m = LsPrefix{} }
func (m *LsPrefix) String() string { return proto.CompactTextString(m) }
func (*LsPrefix) ProtoMessage()    {}
func (*LsPrefix) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd7089df9be4a106, []int{5}
}

func (m *LsPrefix) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LsPrefix.Unmarshal(m, b)
}
func (m *LsPrefix) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LsPrefix.Marshal(b, m, deterministic)
}
func (m *LsPrefix) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LsPrefix.Merge(m, src)
}
func (m *LsPrefix) XXX_Size() int {
	return xxx_messageInfo_LsPrefix.Size(m)
}
func (m *LsPrefix) XXX_DiscardUnknown() {
	xxx_messageInfo_LsPrefix.DiscardUnknown(m)
}

var xxx_messageInfo_LsPrefix proto.InternalMessageInfo

func (m *LsPrefix) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *LsPrefix) GetSidIndex() uint32 {
	if m != nil {
		return m.SidIndex
	}
	return 0
}

type Metric struct {
	Type                 MetricType `protobuf:"varint,1,opt,name=type,proto3,enum=pb.MetricType" json:"type,omitempty"`
	Value                uint32     `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Metric) Reset()         { *m = Metric{} }
func (m *Metric) String() string { return proto.CompactTextString(m) }
func (*Metric) ProtoMessage()    {}
func (*Metric) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd7089df9be4a106, []int{6}
}

func (m *Metric) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metric.Unmarshal(m, b)
}
func (m *Metric) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metric.Marshal(b, m, deterministic)
}
func (m *Metric) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metric.Merge(m, src)
}
func (m *Metric) XXX_Size() int {
	return xxx_messageInfo_Metric.Size(m)
}
func (m *Metric) XXX_DiscardUnknown() {
	xxx_messageInfo_Metric.DiscardUnknown(m)
}

var xxx_messageInfo_Metric proto.InternalMessageInfo

func (m *Metric) GetType() MetricType {
	if m != nil {
		return m.Type
	}
	return MetricType_IGP
}

func (m *Metric) GetValue() uint32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type LsLink struct {
	LocalRouterId        string    `protobuf:"bytes,1,opt,name=local_router_id,json=localRouterId,proto3" json:"local_router_id,omitempty"`
	LocalAsn             uint32    `protobuf:"varint,2,opt,name=local_asn,json=localAsn,proto3" json:"local_asn,omitempty"`
	LocalIp              string    `protobuf:"bytes,3,opt,name=local_ip,json=localIp,proto3" json:"local_ip,omitempty"`
	RemoteRouterId       string    `protobuf:"bytes,4,opt,name=remote_router_id,json=remoteRouterId,proto3" json:"remote_router_id,omitempty"`
	RemoteAsn            uint32    `protobuf:"varint,5,opt,name=remote_asn,json=remoteAsn,proto3" json:"remote_asn,omitempty"`
	RemoteIp             string    `protobuf:"bytes,6,opt,name=remote_ip,json=remoteIp,proto3" json:"remote_ip,omitempty"`
	Metrics              []*Metric `protobuf:"bytes,7,rep,name=metrics,proto3" json:"metrics,omitempty"`
	AdjSid               uint32    `protobuf:"varint,8,opt,name=adj_sid,json=adjSid,proto3" json:"adj_sid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *LsLink) Reset()         { *m = LsLink{} }
func (m *LsLink) String() string { return proto.CompactTextString(m) }
func (*LsLink) ProtoMessage()    {}
func (*LsLink) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd7089df9be4a106, []int{7}
}

func (m *LsLink) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LsLink.Unmarshal(m, b)
}
func (m *LsLink) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LsLink.Marshal(b, m, deterministic)
}
func (m *LsLink) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LsLink.Merge(m, src)
}
func (m *LsLink) XXX_Size() int {
	return xxx_messageInfo_LsLink.Size(m)
}
func (m *LsLink) XXX_DiscardUnknown() {
	xxx_messageInfo_LsLink.DiscardUnknown(m)
}

var xxx_messageInfo_LsLink proto.InternalMessageInfo

func (m *LsLink) GetLocalRouterId() string {
	if m != nil {
		return m.LocalRouterId
	}
	return ""
}

func (m *LsLink) GetLocalAsn() uint32 {
	if m != nil {
		return m.LocalAsn
	}
	return 0
}

func (m *LsLink) GetLocalIp() string {
	if m != nil {
		return m.LocalIp
	}
	return ""
}

func (m *LsLink) GetRemoteRouterId() string {
	if m != nil {
		return m.RemoteRouterId
	}
	return ""
}

func (m *LsLink) GetRemoteAsn() uint32 {
	if m != nil {
		return m.RemoteAsn
	}
	return 0
}

func (m *LsLink) GetRemoteIp() string {
	if m != nil {
		return m.RemoteIp
	}
	return ""
}

func (m *LsLink) GetMetrics() []*Metric {
	if m != nil {
		return m.Metrics
	}
	return nil
}

func (m *LsLink) GetAdjSid() uint32 {
	if m != nil {
		return m.AdjSid
	}
	return 0
}

type LsNode struct {
	Asn                  uint32      `protobuf:"varint,1,opt,name=asn,proto3" json:"asn,omitempty"`
	RouterId             string      `protobuf:"bytes,2,opt,name=router_id,json=routerId,proto3" json:"router_id,omitempty"`
	IsisAreaId           string      `protobuf:"bytes,3,opt,name=isis_area_id,json=isisAreaId,proto3" json:"isis_area_id,omitempty"`
	Hostname             string      `protobuf:"bytes,4,opt,name=hostname,proto3" json:"hostname,omitempty"`
	SrgbBegin            uint32      `protobuf:"varint,5,opt,name=srgb_begin,json=srgbBegin,proto3" json:"srgb_begin,omitempty"`
	SrgbEnd              uint32      `protobuf:"varint,6,opt,name=srgb_end,json=srgbEnd,proto3" json:"srgb_end,omitempty"`
	LsLinks              []*LsLink   `protobuf:"bytes,7,rep,name=ls_links,json=lsLinks,proto3" json:"ls_links,omitempty"`
	LsPrefixes           []*LsPrefix `protobuf:"bytes,8,rep,name=ls_prefixes,json=lsPrefixes,proto3" json:"ls_prefixes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *LsNode) Reset()         { *m = LsNode{} }
func (m *LsNode) String() string { return proto.CompactTextString(m) }
func (*LsNode) ProtoMessage()    {}
func (*LsNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd7089df9be4a106, []int{8}
}

func (m *LsNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LsNode.Unmarshal(m, b)
}
func (m *LsNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LsNode.Marshal(b, m, deterministic)
}
func (m *LsNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LsNode.Merge(m, src)
}
func (m *LsNode) XXX_Size() int {
	return xxx_messageInfo_LsNode.Size(m)
}
func (m *LsNode) XXX_DiscardUnknown() {
	xxx_messageInfo_LsNode.DiscardUnknown(m)
}

var xxx_messageInfo_LsNode proto.InternalMessageInfo

func (m *LsNode) GetAsn() uint32 {
	if m != nil {
		return m.Asn
	}
	return 0
}

func (m *LsNode) GetRouterId() string {
	if m != nil {
		return m.RouterId
	}
	return ""
}

func (m *LsNode) GetIsisAreaId() string {
	if m != nil {
		return m.IsisAreaId
	}
	return ""
}

func (m *LsNode) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *LsNode) GetSrgbBegin() uint32 {
	if m != nil {
		return m.SrgbBegin
	}
	return 0
}

func (m *LsNode) GetSrgbEnd() uint32 {
	if m != nil {
		return m.SrgbEnd
	}
	return 0
}

func (m *LsNode) GetLsLinks() []*LsLink {
	if m != nil {
		return m.LsLinks
	}
	return nil
}

func (m *LsNode) GetLsPrefixes() []*LsPrefix {
	if m != nil {
		return m.LsPrefixes
	}
	return nil
}

type Ted struct {
	Enable               bool      `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	LsNodes              []*LsNode `protobuf:"bytes,2,rep,name=ls_nodes,json=lsNodes,proto3" json:"ls_nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Ted) Reset()         { *m = Ted{} }
func (m *Ted) String() string { return proto.CompactTextString(m) }
func (*Ted) ProtoMessage()    {}
func (*Ted) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd7089df9be4a106, []int{9}
}

func (m *Ted) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ted.Unmarshal(m, b)
}
func (m *Ted) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ted.Marshal(b, m, deterministic)
}
func (m *Ted) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ted.Merge(m, src)
}
func (m *Ted) XXX_Size() int {
	return xxx_messageInfo_Ted.Size(m)
}
func (m *Ted) XXX_DiscardUnknown() {
	xxx_messageInfo_Ted.DiscardUnknown(m)
}

var xxx_messageInfo_Ted proto.InternalMessageInfo

func (m *Ted) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

func (m *Ted) GetLsNodes() []*LsNode {
	if m != nil {
		return m.LsNodes
	}
	return nil
}

func init() {
	proto.RegisterEnum("pb.MetricType", MetricType_name, MetricType_value)
	proto.RegisterType((*Label)(nil), "pb.Label")
	proto.RegisterType((*LspData)(nil), "pb.LspData")
	proto.RegisterType((*LspStatus)(nil), "pb.LspStatus")
	proto.RegisterType((*PeerAddrList)(nil), "pb.PeerAddrList")
	proto.RegisterType((*LspList)(nil), "pb.LspList")
	proto.RegisterType((*LsPrefix)(nil), "pb.LsPrefix")
	proto.RegisterType((*Metric)(nil), "pb.Metric")
	proto.RegisterType((*LsLink)(nil), "pb.LsLink")
	proto.RegisterType((*LsNode)(nil), "pb.LsNode")
	proto.RegisterType((*Ted)(nil), "pb.Ted")
}

func init() { proto.RegisterFile("pola.proto", fileDescriptor_cd7089df9be4a106) }

var fileDescriptor_cd7089df9be4a106 = []byte{
	// 818 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x54, 0xcd, 0x6e, 0xdb, 0x46,
	0x10, 0xb6, 0x24, 0x9b, 0x3f, 0x63, 0xc9, 0x16, 0x16, 0x45, 0xca, 0xda, 0x6d, 0xa3, 0x10, 0x6d,
	0xa1, 0xa4, 0xad, 0x84, 0x3a, 0x40, 0x6f, 0x45, 0x61, 0xc7, 0x86, 0x2b, 0x80, 0x75, 0x04, 0x4a,
	0x3d, 0xb4, 0x17, 0x62, 0x49, 0x4e, 0x94, 0x4d, 0x28, 0x72, 0xc1, 0x5d, 0x05, 0xf1, 0x03, 0xf4,
	0xd8, 0x77, 0xea, 0x63, 0xf4, 0x71, 0x8a, 0x9d, 0x5d, 0x59, 0x4a, 0x80, 0x9c, 0xb8, 0xdf, 0x37,
	0xdf, 0x70, 0x7e, 0x76, 0x66, 0x01, 0x64, 0x53, 0xf1, 0x89, 0x6c, 0x1b, 0xdd, 0xb0, 0xae, 0xcc,
	0xcf, 0xce, 0x57, 0x4d, 0xb3, 0xaa, 0x70, 0x4a, 0x4c, 0xbe, 0x79, 0x35, 0xc5, 0xb5, 0xd4, 0xf7,
	0x56, 0x10, 0xff, 0x04, 0x47, 0x09, 0xcf, 0xb1, 0x62, 0x43, 0xe8, 0x29, 0x51, 0x46, 0x9d, 0x51,
	0x67, 0x3c, 0x48, 0xcd, 0x91, 0x3d, 0x02, 0xaf, 0x6a, 0x2e, 0xcb, 0xb2, 0x8d, 0xba, 0xa3, 0xce,
	0xb8, 0x9f, 0x3a, 0x14, 0xff, 0xdb, 0x01, 0x3f, 0x51, 0xf2, 0x9a, 0x6b, 0xce, 0xc6, 0x70, 0x2a,
	0x0b, 0x94, 0x0b, 0x54, 0x4a, 0x34, 0x35, 0x89, 0x3b, 0x24, 0xfe, 0x98, 0x66, 0x11, 0xf8, 0xaa,
	0x2d, 0xf6, 0x7e, 0xb7, 0x85, 0xc6, 0x52, 0x2a, 0x4d, 0x96, 0x9e, 0xb5, 0x38, 0xc8, 0x9e, 0x80,
	0x57, 0x99, 0xe4, 0x54, 0x74, 0x38, 0xea, 0x8d, 0x8f, 0x2f, 0xc2, 0x89, 0xcc, 0x27, 0x94, 0x6e,
	0xea, 0x0c, 0xec, 0x33, 0x38, 0x2a, 0x9a, 0xaa, 0x69, 0xa3, 0x23, 0x4a, 0xdc, 0x02, 0xf6, 0x35,
	0x35, 0x41, 0x14, 0xf7, 0x77, 0x7c, 0x8d, 0x91, 0x37, 0xea, 0x8c, 0xc3, 0x74, 0x8f, 0x89, 0x9f,
	0x42, 0x98, 0x28, 0xb9, 0xd0, 0x5c, 0x6f, 0x14, 0xfb, 0x12, 0x42, 0xa1, 0x16, 0x9b, 0xa2, 0x40,
	0xa5, 0x28, 0xfb, 0x20, 0xdd, 0x11, 0xf1, 0x0f, 0xd0, 0x9f, 0x23, 0xb6, 0x26, 0x9f, 0x44, 0x28,
	0x6d, 0xd4, 0x5b, 0x6c, 0xd4, 0xbd, 0x71, 0x3f, 0xdd, 0x11, 0xf1, 0x33, 0x6a, 0x0d, 0x09, 0x1f,
	0xc3, 0x61, 0xa2, 0xa4, 0xd5, 0x1c, 0x5f, 0x1c, 0x53, 0xea, 0xb6, 0x6b, 0x29, 0x19, 0xe2, 0x5f,
	0x21, 0x48, 0xd4, 0xbc, 0xc5, 0x57, 0xe2, 0xbd, 0xe9, 0xb5, 0xa4, 0x13, 0x25, 0x10, 0xa6, 0x0e,
	0xb1, 0x73, 0x08, 0x95, 0x28, 0x33, 0x51, 0x97, 0xf8, 0x9e, 0xfa, 0x36, 0x48, 0x03, 0x25, 0xca,
	0x99, 0xc1, 0xf1, 0x15, 0x78, 0xbf, 0xa3, 0x6e, 0x45, 0xc1, 0x62, 0x38, 0xd4, 0xf7, 0x12, 0xc9,
	0xf9, 0xe4, 0xe2, 0xc4, 0xc4, 0xb2, 0x96, 0xe5, 0xbd, 0xc4, 0x94, 0x6c, 0xa6, 0x53, 0xef, 0x78,
	0xb5, 0x41, 0xf7, 0x1b, 0x0b, 0xe2, 0x7f, 0xba, 0xe0, 0x25, 0x2a, 0x11, 0xf5, 0x5b, 0xf6, 0x1d,
	0x9c, 0x56, 0x4d, 0xc1, 0xab, 0xac, 0x6d, 0x36, 0x1a, 0xdb, 0xcc, 0x4d, 0x43, 0x98, 0x0e, 0x88,
	0x4e, 0x89, 0x9d, 0x95, 0x26, 0x27, 0xab, 0xe3, 0xaa, 0xde, 0xe6, 0x44, 0xc4, 0xa5, 0xaa, 0xd9,
	0x17, 0x60, 0xcf, 0x99, 0x90, 0x74, 0x9b, 0x61, 0xea, 0x13, 0x9e, 0x49, 0x36, 0x86, 0x61, 0x8b,
	0xeb, 0x46, 0xe3, 0x5e, 0x80, 0x43, 0x92, 0x9c, 0x58, 0xfe, 0x21, 0xc2, 0x57, 0x00, 0x4e, 0x69,
	0x42, 0xd8, 0x9b, 0x0d, 0x2d, 0x63, 0x62, 0x9c, 0x83, 0x03, 0x26, 0x88, 0xbd, 0xdc, 0xc0, 0x12,
	0x33, 0xc9, 0xbe, 0x01, 0x7f, 0x4d, 0xa5, 0xab, 0xc8, 0xa7, 0xce, 0xc3, 0xae, 0x1b, 0xe9, 0xd6,
	0xc4, 0x3e, 0x07, 0x9f, 0x97, 0x6f, 0x32, 0x33, 0xf1, 0x01, 0xfd, 0xde, 0xe3, 0xe5, 0x9b, 0x85,
	0x28, 0xe3, 0xbf, 0xa9, 0x1f, 0x77, 0x4d, 0x89, 0x66, 0x23, 0x4c, 0x78, 0xb7, 0x11, 0xdc, 0x05,
	0x7e, 0x48, 0xbd, 0xeb, 0x02, 0x6f, 0x93, 0x1e, 0x41, 0x5f, 0x28, 0xa1, 0x32, 0xde, 0x22, 0x37,
	0x76, 0x5b, 0x3d, 0x18, 0xee, 0xb2, 0x45, 0x3e, 0x2b, 0xd9, 0x19, 0x04, 0xaf, 0x1b, 0xa5, 0x6b,
	0x33, 0x93, 0xb6, 0xf0, 0x07, 0x6c, 0x4a, 0x56, 0xed, 0x2a, 0xcf, 0x72, 0x5c, 0x89, 0x87, 0x92,
	0x0d, 0x73, 0x65, 0x08, 0xd3, 0x56, 0x32, 0x63, 0x5d, 0x52, 0xc5, 0x03, 0xb3, 0x3e, 0xab, 0xfc,
	0xa6, 0x2e, 0xd9, 0xb7, 0x10, 0x54, 0x2a, 0xab, 0x44, 0xfd, 0xf6, 0x83, 0x8a, 0xed, 0xa5, 0xa6,
	0x7e, 0x45, 0x5f, 0xc5, 0x7e, 0x84, 0xe3, 0x4a, 0x65, 0x76, 0xac, 0x50, 0x45, 0x01, 0x29, 0xfb,
	0x56, 0x69, 0x87, 0x30, 0x85, 0xca, 0x9d, 0x50, 0xc5, 0xd7, 0xd0, 0x5b, 0x22, 0xbd, 0x01, 0x58,
	0xf3, 0xbc, 0x42, 0xb7, 0x18, 0x0e, 0xb9, 0xa0, 0x75, 0x53, 0xa2, 0x8a, 0xba, 0xfb, 0x41, 0x4d,
	0xe7, 0x4c, 0x50, 0xf3, 0x55, 0xcf, 0x7e, 0x06, 0xd8, 0xcd, 0x21, 0xf3, 0xa1, 0x37, 0xbb, 0x9d,
	0x0f, 0x0f, 0x98, 0x07, 0xdd, 0xe5, 0xcd, 0xb0, 0xc3, 0x42, 0x38, 0xba, 0xbe, 0x49, 0x2e, 0xff,
	0x1c, 0x76, 0x59, 0x1f, 0x82, 0xdf, 0x5e, 0xce, 0x5f, 0xbc, 0xfc, 0xe3, 0x6e, 0x39, 0xec, 0x5d,
	0xfc, 0xd7, 0x01, 0x98, 0x17, 0xb8, 0xc0, 0xf6, 0x9d, 0x28, 0x90, 0x3d, 0x85, 0xf0, 0x45, 0x8b,
	0x5c, 0x63, 0xa2, 0x24, 0xdb, 0xdf, 0xa4, 0xb3, 0x81, 0x03, 0x76, 0x95, 0xe3, 0x03, 0xf6, 0x0b,
	0x9c, 0xde, 0xa2, 0xfe, 0x60, 0x63, 0x1f, 0x4d, 0xec, 0x03, 0x38, 0xd9, 0x3e, 0x80, 0x93, 0x1b,
	0xf3, 0x00, 0x9e, 0x0d, 0x8d, 0xef, 0xbe, 0x32, 0x3e, 0x60, 0xcf, 0x01, 0x6e, 0x51, 0x6f, 0x57,
	0xf8, 0x53, 0x9e, 0xdb, 0x14, 0x9c, 0xd3, 0xf7, 0xe0, 0xdd, 0xa2, 0xa6, 0x76, 0x7d, 0xc2, 0xc1,
	0x37, 0x0e, 0x4b, 0x2c, 0xe3, 0x83, 0xab, 0x27, 0x7f, 0x3d, 0x5e, 0x09, 0xfd, 0x7a, 0x93, 0x4f,
	0x8a, 0x66, 0x3d, 0xad, 0xb5, 0x36, 0x1f, 0xf3, 0x62, 0x4f, 0xb9, 0x14, 0xd3, 0x55, 0x2b, 0x8b,
	0xdc, 0x23, 0xef, 0xe7, 0xff, 0x07, 0x00, 0x00, 0xff, 0xff, 0xe1, 0x1c, 0x41, 0x4e, 0xc9, 0x05,
	0x00, 0x00,
}
